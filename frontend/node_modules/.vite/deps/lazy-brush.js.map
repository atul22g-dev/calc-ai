{
  "version": 3,
  "sources": ["../../lazy-brush/lib/lazy-brush.js"],
  "sourcesContent": ["var u = Object.defineProperty;\nvar d = (i, t, s) => t in i ? u(i, t, { enumerable: !0, configurable: !0, writable: !0, value: s }) : i[t] = s;\nvar e = (i, t, s) => (d(i, typeof t != \"symbol\" ? t + \"\" : t, s), s);\nfunction n(i) {\n  return 1 - Math.sqrt(1 - Math.pow(i, 2));\n}\nclass a {\n  constructor(t, s) {\n    e(this, \"x\");\n    e(this, \"y\");\n    this.x = t, this.y = s;\n  }\n  update(t) {\n    return this.x = t.x, this.y = t.y, this;\n  }\n  moveByAngle(t, s, r) {\n    const h = t + Math.PI / 2;\n    return r ? (this.x = this.x + Math.sin(h) * s * n(1 - r), this.y = this.y - Math.cos(h) * s * n(1 - r)) : (this.x = this.x + Math.sin(h) * s, this.y = this.y - Math.cos(h) * s), this;\n  }\n  equalsTo(t) {\n    return this.x === t.x && this.y === t.y;\n  }\n  getDifferenceTo(t) {\n    return new a(this.x - t.x, this.y - t.y);\n  }\n  getDistanceTo(t) {\n    const s = this.getDifferenceTo(t);\n    return Math.sqrt(Math.pow(s.x, 2) + Math.pow(s.y, 2));\n  }\n  getAngleTo(t) {\n    const s = this.getDifferenceTo(t);\n    return Math.atan2(s.y, s.x);\n  }\n  toObject() {\n    return {\n      x: this.x,\n      y: this.y\n    };\n  }\n}\nconst o = 30;\nclass c {\n  constructor(t = {}) {\n    e(this, \"_isEnabled\");\n    e(this, \"_hasMoved\");\n    e(this, \"radius\");\n    e(this, \"pointer\");\n    e(this, \"brush\");\n    e(this, \"angle\");\n    e(this, \"distance\");\n    const s = t.initialPoint || { x: 0, y: 0 };\n    this.radius = t.radius || o, this._isEnabled = t.enabled !== !1, this.pointer = new a(s.x, s.y), this.brush = new a(s.x, s.y), this.angle = 0, this.distance = 0, this._hasMoved = !1;\n  }\n  enable() {\n    this._isEnabled = !0;\n  }\n  disable() {\n    this._isEnabled = !1;\n  }\n  isEnabled() {\n    return this._isEnabled;\n  }\n  setRadius(t) {\n    this.radius = t;\n  }\n  getRadius() {\n    return this.radius;\n  }\n  getBrushCoordinates() {\n    return this.brush.toObject();\n  }\n  getPointerCoordinates() {\n    return this.pointer.toObject();\n  }\n  getBrush() {\n    return this.brush;\n  }\n  getPointer() {\n    return this.pointer;\n  }\n  getAngle() {\n    return this.angle;\n  }\n  getDistance() {\n    return this.distance;\n  }\n  brushHasMoved() {\n    return this._hasMoved;\n  }\n  update(t, s = {}) {\n    if (this._hasMoved = !1, this.pointer.equalsTo(t) && !s.both && !s.friction)\n      return !1;\n    if (this.pointer.update(t), s.both)\n      return this._hasMoved = !0, this.brush.update(t), !0;\n    if (this._isEnabled) {\n      this.distance = this.pointer.getDistanceTo(this.brush), this.angle = this.pointer.getAngleTo(this.brush);\n      const r = Math.round((this.distance - this.radius) * 10) / 10 > 0, h = s.friction && s.friction < 1 && s.friction > 0 ? s.friction : void 0;\n      r && (this.brush.moveByAngle(\n        this.angle,\n        this.distance - this.radius,\n        h\n      ), this._hasMoved = !0);\n    } else\n      this.distance = 0, this.angle = 0, this.brush.update(t), this._hasMoved = !0;\n    return !0;\n  }\n}\nexport {\n  c as LazyBrush,\n  a as LazyPoint\n};\n"],
  "mappings": "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",
  "names": []
}
